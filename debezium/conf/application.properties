###############################################################################
#  SINK  — RabbitMQ (AMQP 0‑9‑1)
###############################################################################
debezium.sink.type=rabbitmq
debezium.sink.rabbitmq.connection.host=rabbitmq
debezium.sink.rabbitmq.connection.port=5672
debezium.sink.rabbitmq.connection.username=guest
debezium.sink.rabbitmq.connection.password=guest
debezium.sink.rabbitmq.exchange=amq.topic

# Use ONE constant routing‑key so your existing queue binding works
debezium.sink.rabbitmq.routingKey=dbz.inventory
debezium.sink.rabbitmq.message.routingKey=dbz.inventory
debezium.sink.rabbitmq.message.routingKey.strategy=constant

###############################################################################
#  SOURCE — MySQL connector
###############################################################################
debezium.source.connector.class=io.debezium.connector.mysql.MySqlConnector
debezium.source.database.hostname=mysql
debezium.source.database.port=3306
debezium.source.database.user=root
debezium.source.database.password=root
debezium.source.database.server.id=223344
debezium.source.database.server.name=dbserver1
debezium.source.database.include.list=inventory
debezium.source.table.include.list=inventory.orders,inventory.products
debezium.source.topic.prefix=inventory_cdc

###############################################################################
#  OFFSET & SCHEMA HISTORY — store in files on the same persistent volume
###############################################################################
debezium.source.offset.storage.file.filename=/debezium/data/offsets.dat
debezium.source.offset.storage.file.flush.interval.ms=60000

debezium.source.schema.history.internal=io.debezium.storage.file.history.FileSchemaHistory
debezium.source.schema.history.internal.file.filename=/debezium/data/schema-history.dat

# --- ✅ ADD THIS: Event Flattening SMT ---
debezium.transforms=unwrap
debezium.transforms.unwrap.type=io.debezium.transforms.ExtractNewRecordState

# Optional: include operation (c/u/d) as a field
debezium.transforms.unwrap.add.fields=op

# Format config
debezium.format.key=json
debezium.format.value=json

# Quarkus
quarkus.log.console.json=false